// Code generated by cdpgen. DO NOT EDIT.

package css

import (
	"encoding/json"
)

const EventCSSFontsUpdated = "CSS.fontsUpdated"

// FontsUpdatedReply is the reply for FontsUpdated events.
type FontsUpdatedReply struct {
	Font FontFace `json:"font,omitempty"` // The web font that has loaded.
}

// Unmarshal the byte array into a return value for FontsUpdated in the CSS domain.
func (a *FontsUpdatedReply) UnmarshalJSON(b []byte) error {
	type Copy FontsUpdatedReply
	c := &Copy{}
	err := json.Unmarshal(b, c)
	if err != nil {
		return err
	}
	*a = FontsUpdatedReply(*c)
	return nil
}

const EventCSSMediaQueryResultChanged = "CSS.mediaQueryResultChanged"

// MediaQueryResultChangedReply is the reply for MediaQueryResultChanged events.
type MediaQueryResultChangedReply struct {
}

// Unmarshal the byte array into a return value for MediaQueryResultChanged in the CSS domain.
func (a *MediaQueryResultChangedReply) UnmarshalJSON(b []byte) error {
	type Copy MediaQueryResultChangedReply
	c := &Copy{}
	err := json.Unmarshal(b, c)
	if err != nil {
		return err
	}
	*a = MediaQueryResultChangedReply(*c)
	return nil
}

const EventCSSStyleSheetAdded = "CSS.styleSheetAdded"

// StyleSheetAddedReply is the reply for StyleSheetAdded events.
type StyleSheetAddedReply struct {
	Header StyleSheetHeader `json:"header"` // Added stylesheet metainfo.
}

// Unmarshal the byte array into a return value for StyleSheetAdded in the CSS domain.
func (a *StyleSheetAddedReply) UnmarshalJSON(b []byte) error {
	type Copy StyleSheetAddedReply
	c := &Copy{}
	err := json.Unmarshal(b, c)
	if err != nil {
		return err
	}
	*a = StyleSheetAddedReply(*c)
	return nil
}

const EventCSSStyleSheetChanged = "CSS.styleSheetChanged"

// StyleSheetChangedReply is the reply for StyleSheetChanged events.
type StyleSheetChangedReply struct {
	StyleSheetID StyleSheetID `json:"styleSheetId"` // No description.
}

// Unmarshal the byte array into a return value for StyleSheetChanged in the CSS domain.
func (a *StyleSheetChangedReply) UnmarshalJSON(b []byte) error {
	type Copy StyleSheetChangedReply
	c := &Copy{}
	err := json.Unmarshal(b, c)
	if err != nil {
		return err
	}
	*a = StyleSheetChangedReply(*c)
	return nil
}

const EventCSSStyleSheetRemoved = "CSS.styleSheetRemoved"

// StyleSheetRemovedReply is the reply for StyleSheetRemoved events.
type StyleSheetRemovedReply struct {
	StyleSheetID StyleSheetID `json:"styleSheetId"` // Identifier of the removed stylesheet.
}

// Unmarshal the byte array into a return value for StyleSheetRemoved in the CSS domain.
func (a *StyleSheetRemovedReply) UnmarshalJSON(b []byte) error {
	type Copy StyleSheetRemovedReply
	c := &Copy{}
	err := json.Unmarshal(b, c)
	if err != nil {
		return err
	}
	*a = StyleSheetRemovedReply(*c)
	return nil
}
