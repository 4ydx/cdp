// Code generated by cdpgen. DO NOT EDIT.

package overlay

import (
	"encoding/json"

	"github.com/4ydx/cdp/protocol/dom"
	"github.com/4ydx/cdp/protocol/page"
)

const (
	EventOverlayInspectNodeRequested   = "Overlay.inspectNodeRequested"
	EventOverlayNodeHighlightRequested = "Overlay.nodeHighlightRequested"
	EventOverlayScreenshotRequested    = "Overlay.screenshotRequested"
)

var EventConstants = map[string]json.Unmarshaler{
	EventOverlayInspectNodeRequested:   &InspectNodeRequestedReply{},
	EventOverlayNodeHighlightRequested: &NodeHighlightRequestedReply{},
	EventOverlayScreenshotRequested:    &ScreenshotRequestedReply{},
}

func GetEventReply(event string) (json.Unmarshaler, bool) {
	e, ok := EventConstants[event]
	return e, ok
}

// InspectNodeRequestedReply is the reply for InspectNodeRequested events.
type InspectNodeRequestedReply struct {
	BackendNodeID dom.BackendNodeID `json:"backendNodeId"` // Id of the node to inspect.
}

// Unmarshal the byte array into a return value for InspectNodeRequested in the Overlay domain.
func (a *InspectNodeRequestedReply) UnmarshalJSON(b []byte) error {
	type Copy InspectNodeRequestedReply
	c := &Copy{}
	err := json.Unmarshal(b, c)
	if err != nil {
		return err
	}
	*a = InspectNodeRequestedReply(*c)
	return nil
}

// NodeHighlightRequestedReply is the reply for NodeHighlightRequested events.
type NodeHighlightRequestedReply struct {
	NodeID dom.NodeID `json:"nodeId"` // No description.
}

// Unmarshal the byte array into a return value for NodeHighlightRequested in the Overlay domain.
func (a *NodeHighlightRequestedReply) UnmarshalJSON(b []byte) error {
	type Copy NodeHighlightRequestedReply
	c := &Copy{}
	err := json.Unmarshal(b, c)
	if err != nil {
		return err
	}
	*a = NodeHighlightRequestedReply(*c)
	return nil
}

// ScreenshotRequestedReply is the reply for ScreenshotRequested events.
type ScreenshotRequestedReply struct {
	Viewport page.Viewport `json:"viewport"` // Viewport to capture, in CSS.
}

// Unmarshal the byte array into a return value for ScreenshotRequested in the Overlay domain.
func (a *ScreenshotRequestedReply) UnmarshalJSON(b []byte) error {
	type Copy ScreenshotRequestedReply
	c := &Copy{}
	err := json.Unmarshal(b, c)
	if err != nil {
		return err
	}
	*a = ScreenshotRequestedReply(*c)
	return nil
}
