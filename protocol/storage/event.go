// Code generated by cdpgen. DO NOT EDIT.

package storage

import (
	"encoding/json"
)

const EventStorageCacheStorageContentUpdated = "Storage.cacheStorageContentUpdated"

// CacheStorageContentUpdatedReply is the reply for CacheStorageContentUpdated events.
type CacheStorageContentUpdatedReply struct {
	Origin    string `json:"origin"`    // Origin to update.
	CacheName string `json:"cacheName"` // Name of cache in origin.
}

// Unmarshal the byte array into a return value for CacheStorageContentUpdated in the Storage domain.
func (a *CacheStorageContentUpdatedReply) UnmarshalJSON(b []byte) error {
	type Copy CacheStorageContentUpdatedReply
	c := &Copy{}
	err := json.Unmarshal(b, c)
	if err != nil {
		return err
	}
	*a = CacheStorageContentUpdatedReply(*c)
	return nil
}

const EventStorageCacheStorageListUpdated = "Storage.cacheStorageListUpdated"

// CacheStorageListUpdatedReply is the reply for CacheStorageListUpdated events.
type CacheStorageListUpdatedReply struct {
	Origin string `json:"origin"` // Origin to update.
}

// Unmarshal the byte array into a return value for CacheStorageListUpdated in the Storage domain.
func (a *CacheStorageListUpdatedReply) UnmarshalJSON(b []byte) error {
	type Copy CacheStorageListUpdatedReply
	c := &Copy{}
	err := json.Unmarshal(b, c)
	if err != nil {
		return err
	}
	*a = CacheStorageListUpdatedReply(*c)
	return nil
}

const EventStorageIndexedDBContentUpdated = "Storage.indexedDBContentUpdated"

// IndexedDBContentUpdatedReply is the reply for IndexedDBContentUpdated events.
type IndexedDBContentUpdatedReply struct {
	Origin          string `json:"origin"`          // Origin to update.
	DatabaseName    string `json:"databaseName"`    // Database to update.
	ObjectStoreName string `json:"objectStoreName"` // ObjectStore to update.
}

// Unmarshal the byte array into a return value for IndexedDBContentUpdated in the Storage domain.
func (a *IndexedDBContentUpdatedReply) UnmarshalJSON(b []byte) error {
	type Copy IndexedDBContentUpdatedReply
	c := &Copy{}
	err := json.Unmarshal(b, c)
	if err != nil {
		return err
	}
	*a = IndexedDBContentUpdatedReply(*c)
	return nil
}

const EventStorageIndexedDBListUpdated = "Storage.indexedDBListUpdated"

// IndexedDBListUpdatedReply is the reply for IndexedDBListUpdated events.
type IndexedDBListUpdatedReply struct {
	Origin string `json:"origin"` // Origin to update.
}

// Unmarshal the byte array into a return value for IndexedDBListUpdated in the Storage domain.
func (a *IndexedDBListUpdatedReply) UnmarshalJSON(b []byte) error {
	type Copy IndexedDBListUpdatedReply
	c := &Copy{}
	err := json.Unmarshal(b, c)
	if err != nil {
		return err
	}
	*a = IndexedDBListUpdatedReply(*c)
	return nil
}
