// Code generated by cdpgen. DO NOT EDIT.

package input

// TouchPoint
type TouchPoint struct {
	X             float64 `json:"x"`                       // X coordinate of the event relative to the main frame's viewport in CSS pixels.
	Y             float64 `json:"y"`                       // Y coordinate of the event relative to the main frame's viewport in CSS pixels. 0 refers to the top of the viewport and Y increases as it proceeds towards the bottom of the viewport.
	RadiusX       float64 `json:"radiusX,omitempty"`       // X radius of the touch area (default: 1.0).
	RadiusY       float64 `json:"radiusY,omitempty"`       // Y radius of the touch area (default: 1.0).
	RotationAngle float64 `json:"rotationAngle,omitempty"` // Rotation angle (default: 0.0).
	Force         float64 `json:"force,omitempty"`         // Force (default: 1.0).
	ID            float64 `json:"id,omitempty"`            // Identifier used to track touch sources between events, must be unique within an event.
}

// GestureSourceType
//
// Note: This type is experimental.
type GestureSourceType string

// GestureSourceType as enums.
const (
	GestureSourceTypeNotSet  GestureSourceType = ""
	GestureSourceTypeDefault GestureSourceType = "default"
	GestureSourceTypeTouch   GestureSourceType = "touch"
	GestureSourceTypeMouse   GestureSourceType = "mouse"
)

func (e GestureSourceType) Valid() bool {
	switch e {
	case "default", "touch", "mouse":
		return true
	default:
		return false
	}
}

func (e GestureSourceType) String() string {
	return string(e)
}

// MouseButton
type MouseButton string

// MouseButton as enums.
const (
	MouseButtonNotSet  MouseButton = ""
	MouseButtonNone    MouseButton = "none"
	MouseButtonLeft    MouseButton = "left"
	MouseButtonMiddle  MouseButton = "middle"
	MouseButtonRight   MouseButton = "right"
	MouseButtonBack    MouseButton = "back"
	MouseButtonForward MouseButton = "forward"
)

func (e MouseButton) Valid() bool {
	switch e {
	case "none", "left", "middle", "right", "back", "forward":
		return true
	default:
		return false
	}
}

func (e MouseButton) String() string {
	return string(e)
}
