// Code generated by cdpgen. DO NOT EDIT.

package applicationcache

import (
	"encoding/json"

	"github.com/4ydx/cdp/protocol"
)

const EventApplicationCacheApplicationCacheStatusUpdated = "ApplicationCache.applicationCacheStatusUpdated"

// StatusUpdatedReply is the reply for ApplicationCacheStatusUpdated events.
type StatusUpdatedReply struct {
	FrameID     shared.FrameID `json:"frameId"`     // Identifier of the frame containing document whose application cache updated status.
	ManifestURL string         `json:"manifestURL"` // Manifest URL.
	Status      int            `json:"status"`      // Updated application cache status.
}

// Unmarshal the byte array into a return value for ApplicationCacheStatusUpdated in the ApplicationCache domain.
func (a *StatusUpdatedReply) UnmarshalJSON(b []byte) error {
	type Copy StatusUpdatedReply
	c := &Copy{}
	err := json.Unmarshal(b, c)
	if err != nil {
		return err
	}
	*a = StatusUpdatedReply(*c)
	return nil
}

const EventApplicationCacheNetworkStateUpdated = "ApplicationCache.networkStateUpdated"

// NetworkStateUpdatedReply is the reply for NetworkStateUpdated events.
type NetworkStateUpdatedReply struct {
	IsNowOnline bool `json:"isNowOnline"` // No description.
}

// Unmarshal the byte array into a return value for NetworkStateUpdated in the ApplicationCache domain.
func (a *NetworkStateUpdatedReply) UnmarshalJSON(b []byte) error {
	type Copy NetworkStateUpdatedReply
	c := &Copy{}
	err := json.Unmarshal(b, c)
	if err != nil {
		return err
	}
	*a = NetworkStateUpdatedReply(*c)
	return nil
}
