// Code generated by cdpgen. DO NOT EDIT.

package headlessexperimental

import (
	"encoding/json"
)

const (
	EventHeadlessExperimentalNeedsBeginFramesChanged = "HeadlessExperimental.needsBeginFramesChanged"
)

var EventConstants = map[string]json.Unmarshaler{
	EventHeadlessExperimentalNeedsBeginFramesChanged: &NeedsBeginFramesChangedReply{},
}

func GetEventReply(event string) (json.Unmarshaler, bool) {
	e, ok := EventConstants[event]
	return e, ok
}

// NeedsBeginFramesChangedReply is the reply for NeedsBeginFramesChanged events.
type NeedsBeginFramesChangedReply struct {
	NeedsBeginFrames bool `json:"needsBeginFrames"` // True if BeginFrames are needed, false otherwise.
}

// Unmarshal the byte array into a return value for NeedsBeginFramesChanged in the HeadlessExperimental domain.
func (a *NeedsBeginFramesChangedReply) UnmarshalJSON(b []byte) error {
	type Copy NeedsBeginFramesChangedReply
	c := &Copy{}
	err := json.Unmarshal(b, c)
	if err != nil {
		return err
	}
	*a = NeedsBeginFramesChangedReply(*c)
	return nil
}
